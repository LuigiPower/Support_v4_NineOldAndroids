{"name":"Support v4 nineoldandroids","tagline":"","body":"#Android Support Library v4 with NineOldAndroids\r\n\r\nAllows using android [Property Animations][2] with Google's Support Library v4 Fragment transitions.  Rely's on Jake Wharton's [NineOldAndroids][1].\r\n\r\n* Object Animator API's for [Fragment Transitions](#transition)\r\n  * [Standard Transitions](#standard)\r\n  * [Custom Transitions](#custom)\r\n  * [Fragment Implementation](#fragment)\r\n  * [Style Resources](#style)\r\n* [ViewPager PagerTransformers](#pager)\r\n\r\n###Project Configuration\r\n\r\nYour project must have [NineOldAndroids][1] in the classpath.  This can be done with Maven or putting the jar into the /libs folder. *This project is packaged as an APK Library* to support style resources.  Import it into eclipse and reference it as an Android Library. Right-click on project and `Properties->Android`.  Finally remove Google's support v4 library from your classpath.\r\n\r\n***\r\n\r\n###Usage\r\n\r\nRead Google's documentation about [Property Animations][2].  They are different from View animations. For example:\r\n\r\nCreate a file `res/animator/fade_in.xml'\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<set xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n\tandroid:zAdjustment=\"top\">\r\n    <objectAnimator\r\n        android:valueFrom=\"0\"\r\n        android:valueTo=\"1\"\r\n        android:valueType=\"floatType\"\r\n        android:propertyName=\"alpha\"\r\n        android:duration=\"220\"/>\r\n</set>\r\n```\r\n\r\n  Look at the sample application for a complete example and read below for instructions.\r\n\r\n###<a name=\"transition\"></a>Animator Fragment Transitions\r\n\r\nThis fork allows using [NineOldAndroids][1] Object Animators for fragment transitions.  View animations will no longer work.\r\n\r\n####<a name=\"standard\"></a>Standard Transitions\r\n\r\nSpecify standard transitions in the transaction.\r\n\r\n```java\r\ntx.setTransition(FragmentTransaction.TRANSIT_FRAGMENT_OPEN);\r\n```\r\n\r\n####<a name=\"custom\"></a>Custom Transitions\r\n\r\nSpecify custom transition animations in the transaction\r\n\r\n```java\r\ntx.setCustomTransitions(R.animator.flip_left_in, R.animator.flip_left_out, R.animator.flip_right_in, R.animator.flip_right_out)\r\n```\r\n\r\n####<a name=\"fragment\"></a>Fragment Implementation Specified Transitions\r\n\r\nSpecify animations in Fragment implementation\r\n\r\n```java\r\npublic class AnimatedFragment extends Fragment {\r\n\r\n\t//class contents removed\r\n\r\n\t@Override\r\n\tpublic Animator onCreateAnimator(int transit, boolean enter, int nextAnim) {\r\n\t   //If transaction specifies a custom animation, use it\r\n\t   if(nextAnim>0)\r\n\t\t  return AnimatorInflater.loadAnimator(getActivity(), nextAnim);\r\n\t   if(enter)\r\n\t\t  return AnimatorInflater.loadAnimator(getActivity(), R.animator.fade_in);\r\n\t   else\r\n\t\t  return AnimatorInflater.loadAnimator(getActivity(), R.animator.fade_out);\r\n\t}\r\n\r\n}\r\n```\r\n\r\n####<a name=\"style\"></a>Transition style resources\r\n\r\nSpecify transition animations in a style resource.\r\n\r\nCreate a style resource `res/values/styles.xml'\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<resources>\r\n \t<!-- Override standard Transitions with a Style -->\r\n   \t<style name=\"MyTransitionStyle\">\r\n\t    <item name=\"fragmentFadeEnterAnimation\">@animator/fade_enter</item>\r\n\t    <item name=\"fragmentFadeExitAnimation\">@animator/fade_exit</item>\r\n\t    <item name=\"fragmentOpenEnterAnimation\">@animator/flip_left_in</item>\r\n\t    <item name=\"fragmentOpenExitAnimation\">@animator/flip_left_out</item>\r\n\t    <item name=\"fragmentCloseEnterAnimation\">@animator/flip_right_in</item>\r\n\t    <item name=\"fragmentCloseExitAnimation\">@animator/flip_right_out</item>\r\n   \t</style>\r\n</resources>\r\n```\r\n\r\nSpecify the resource and transition in the transaction\r\n\r\n```java\r\ntx.setTransitionStyle(R.style.MyTransitionStyle);\r\ntx.setTransition(FragmentTransaction.TRANSIT_FRAGMENT_OPEN);\r\n```\r\n\r\n***\r\n\r\n###<a name=\"pager\"></a>PageTransformer\r\n\r\nThe standard ViewPager ignores [PageTransformers][3] in pre-HoneyComb API levels.  This library supports implementing PageTransformers with NineOldAndroids.  Just *use ViewHelper instead of the View properties*.  For example:\r\n\r\n```java\r\n/**\r\n * Implemented using NineOldAndroids ViewHelper instead of newer API View properties\r\n */\r\npublic class ZoomOutPageTransformer implements PageTransformer {\r\n    private static float MIN_SCALE = 0.85f;\r\n    private static float MIN_ALPHA = 0.5f;\r\n\r\n    public void transformPage(View view, float position) {\r\n        int pageWidth = view.getWidth();\r\n        int pageHeight = view.getHeight();\r\n        \r\n        if (position < -1) { // [-Infinity,-1)\r\n            // This page is way off-screen to the left.\r\n            ViewHelper.setAlpha(view, 0);\r\n        } else if (position <= 1) { // [-1,1]\r\n            // Modify the default slide transition to shrink the page as well\r\n            float scaleFactor = Math.max(MIN_SCALE, 1 - Math.abs(position));\r\n            float vertMargin = pageHeight * (1 - scaleFactor) / 2;\r\n            float horzMargin = pageWidth * (1 - scaleFactor) / 2;\r\n            if (position < 0) {\r\n                ViewHelper.setTranslationX(view, horzMargin - vertMargin / 2);\r\n            } else {\r\n                ViewHelper.setTranslationX(view, -horzMargin + vertMargin / 2);\r\n            }\r\n\r\n            // Scale the page down (between MIN_SCALE and 1)\r\n            ViewHelper.setScaleX(view, scaleFactor);\r\n            ViewHelper.setScaleY(view, scaleFactor);\r\n\r\n            // Fade the page relative to its size.\r\n            ViewHelper.setAlpha(view, MIN_ALPHA +\r\n                    (scaleFactor - MIN_SCALE) /\r\n                    (1 - MIN_SCALE) * (1 - MIN_ALPHA));\r\n\r\n        } else { // (1,+Infinity]\r\n            // This page is way off-screen to the right.\r\n            ViewHelper.setAlpha(view, 0);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nSet the PageTransformer as usual:\r\n\r\n```java\r\nviewPager.setPageTransformer(new ZoomOutPageTransformer());\r\n```\r\n\r\n[1]: http://nineoldandroids.com \"NineOldAndroids\"\r\n[2]: http://developer.android.com/guide/topics/graphics/prop-animation.html \"Android Property Animations\"\r\n[3]: http://developer.android.com/training/animation/screen-slide.html#pagetransformer  \"Using ViewPager for Screen Slides\"\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}